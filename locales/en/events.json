{
  "additional": "{{user.name}}",
  "select_agency": "$t(events::agency, {\"context\": \"{{agency}}\"})",
  "agency": "",
  "agency_user": "user",
  "agency_pmu": "PMU",
  "agency_supplier": "{{move.supplier.name}}",
  "default_agency": "pmu",
  "select_authorised_by": "$t(events::authorised_by, {\"context\": \"{{authorised_by, exists}}\"})",
  "authorised_by": "",
  "authorised_by_true": "<br>Authorised by {{authorised_by}}",
  "select_fault_classification": "Incident has been classified as: $t(events::fault_classification, {\"context\": \"{{fault_classification}}\"})",
  "fault_classification": "{{fault_classification}}",
  "fault_classification_supplier": "Supplier’s fault",
  "fault_classification_was_not_supplier": "Not supplier’s fault",
  "fault_classification_investigation": "Under investigation",
  "select_incident_vehicle": "$t(events::incident_vehicle, {\"context\": \"{{vehicle_reg, exists}}\"})",
  "incident_vehicle": "",
  "incident_vehicle_true": "The event occurred on vehicle {{vehicle_reg}}",
  "incident_reported": "The incident was reported by {{supplier_personnel_numbers, oxfordJoin}} at {{reported_at, formatTime}}",
  "incident_reported_classified": "<br>$t(events::incident_reported)<br>$t(events::select_fault_classification)",
  "incident_level_details": "{{incident_level}} incident involving $t(events::person) occurred $t(events::select_incident_location_preposition) $t(events::select_incident_location_vehicle) $t(events::incident_reported_classified)",
  "select_incident_location_preposition": "$t(events::incident_location_preposition, {\"context\": \"{{vehicle_reg, exists}}\"})",
  "incident_location_preposition_true": "on",
  "incident_location_preposition_false": "at",
  "select_incident_location_vehicle": "$t(events::incident_location_vehicle, {\"context\": \"{{vehicle_reg, exists}}\"})",
  "incident_location_vehicle_true": "vehicle {{vehicle_reg}}",
  "incident_location_vehicle_false": "{{location.title}}",
  "incident_escaped": "$t(events::person) escaped from $t(events::select_incident_location_vehicle) $t(events::incident_reported_classified)",
  "no_events": "No events",
  "person": "{{person._fullname}}",
  "classification": {
    "default": "Incident",
    "incident": "Serious incident",
    "medical": "Medical incident",
    "suicide_and_self_harm": "Suicide and Self-harm concern"
  },
  "JourneyAdmitToReception": {
    "heading": "Admitted to reception",
    "description": "Vehicle {{vehicle_reg}} admitted to reception of {{location.title}}"
  },
  "JourneyAdmitThroughOuterGate": {
    "heading": "Admitted through outer gate",
    "description": "Vehicle {{vehicle_reg}} admitted through outer gate of {{location.title}}"
  },
  "JourneyArriveAtOuterGate": {
    "heading": "Arrived at outer gate",
    "description": "Vehicle {{vehicle_reg}} arrived at outer gate of {{location.title}}"
  },
  "JourneyCancel": {
    "heading": "Journey {{journey.number}} cancelled",
    "description": "Journey from {{journey.from_location.title}} to {{journey.to_location.title}} cancelled"
  },
  "JourneyChangeVehicle": {
    "heading": "Vehicle changed",
    "description": "$t(events::person) moved from {{previous_vehicle_reg}} to {{vehicle_reg}}"
  },
  "JourneyComplete": {
    "heading": "Journey {{journey.number}} completed",
    "description": "Journey from {{journey.from_location.title}} to {{journey.to_location.title}} completed"
  },
  "JourneyCreate": {
    "heading": "Journey {{journey.number}} created",
    "description": "Journey from {{journey.from_location.title}} to {{journey.to_location.title}} created by {{supplier.name}}"
  },
  "JourneyExitThroughOuterGate": {
    "heading": "Exited from outer gate",
    "description": "Vehicle {{vehicle_reg}} exited through outer gate of {{journey.from_location.title}}"
  },
  "JourneyHandoverToDestination": {
    "heading": "Handover to establishment",
    "description": "$t(events::person) handed over by {{move.supplier.name}} (Personnel number {{supplier_personnel_number}}) at {{journey.to_location.title}}"
  },
  "JourneyHandoverToSupplier": {
    "heading": "Handover to supplier",
    "description": "$t(events::person) handed over to {{move.supplier.name}}"
  },
  "JourneyPersonBoardsVehicle": {
    "heading": "Boarded escort vehicle",
    "description": "$t(events::person) boarded escort vehicle {{vehicle_reg}}"
  },
  "JourneyPersonLeaveVehicle": {
    "heading": "Left escort vehicle",
    "description": "$t(events::person) left escort vehicle {{vehicle_reg}}"
  },
  "JourneyReadyToExit": {
    "heading": "Ready to exit",
    "description": "Escort vehicle {{vehicle_reg}} boarding complete, ready to exit from {{journey.from_location.title}}"
  },
  "JourneyReject": {
    "heading": "Journey {{journey.number}} rejected",
    "description": "Journey from {{journey.from_location.title}} to {{journey.to_location.title}} rejected by {{move.supplier.name}}"
  },
  "JourneyStart": {
    "heading": "Journey {{journey.number}} started",
    "description": "Journey from {{journey.from_location.title}} to {{journey.to_location.title}} started by {{move.supplier.name}}"
  },
  "JourneyUpdate": {
    "heading": "Journey {{journey.number}} updated by {{supplier.name}}",
    "description": ""
  },
  "JourneyUncancel": {
    "heading": "Journey {{journey.number}} uncancelled",
    "description": "Cancelled Journey from {{journey.from_location.title}} to {{journey.to_location.title}} revoked by {{move.supplier.name}}"
  },
  "JourneyUncomplete": {
    "heading": "Journey {{journey.number}} uncompleted",
    "description": "Completed Journey from {{journey.from_location.title}} to {{journey.to_location.title}} revoked by {{move.supplier.name}}"
  },
  "LodgingCancel": {
    "heading": "Lodging cancelled",
    "description": "Lodging cancelled at {{location.title}} on {{start_date, formatDateWithDay}}",
    "description_long": "Lodging cancelled at {{location.title}} between {{start_date, formatDateWithDay}} and {{end_date, formatDateWithDay}}"
  },
  "LodgingCreate": {
    "heading": "Lodging proposed",
    "description": "Lodging proposed at {{location.title}} on {{start_date, formatDateWithDay}}",
    "description_long": "Lodging proposed at {{location.title}} between {{start_date, formatDateWithDay}} and {{end_date, formatDateWithDay}}"
  },
  "LodgingUpdate": {
    "heading": "Lodging updated",
    "description": "Lodging updated",
    "description_start_date": "$t(events::LodgingUpdate.start_date)",
    "description_start_date_and_end_date": "$t(events::LodgingUpdate.start_date)<br>$t(events::LodgingUpdate.end_date)",
    "description_start_date_and_location": "$t(events::LodgingUpdate.start_date)<br>$t(events::LodgingUpdate.location)",
    "description_start_date_and_end_date_location": "$t(events::LodgingUpdate.start_date)<br>$t(events::LodgingUpdate.end_date)<br>$t(events::LodgingUpdate.location)",
    "description_end_date": "$t(events::LodgingUpdate.end_date)",
    "description_end_date_and_location": "$t(events::LodgingUpdate.end_date)<br>$t(events::LodgingUpdate.location)",
    "description_location": "$t(events::LodgingUpdate.location)",
    "start_date": "Start date changed from {{old_start_date, formatDateWithDay}} to {{start_date, formatDateWithDay}}",
    "end_date": "End date changed from {{old_end_date, formatDateWithDay}} to {{end_date, formatDateWithDay}}",
    "location": "Location changed from {{old_location.title}} to {{location.title}}"
  },
  "MoveAccept": {
    "statusChange": true,
    "heading": "$t(statuses::booked)",
    "description": "Move has been accepted by {{move.supplier.name}}"
  },
  "MoveApprove": {
    "statusChange": true,
    "heading": "$t(statuses::requested)",
    "description": "Move has been approved by PMU and requested with {{move.supplier.name}}. Date of travel set to {{move.date, formatDateWithDay}}."
  },
  "MoveCancel": {
    "default_agency": "user",
    "statusChange": true,
    "heading": "$t(statuses::cancelled)",
    "description": "Move has been cancelled"
  },
  "MoveCollectionByEscort": {
    "heading": "Handover to {{move.supplier.name}}",
    "description": "$t(events::person) has been received"
  },
  "MoveComplete": {
    "statusChange": true,
    "heading": "$t(statuses::completed)",
    "description": "Move has been completed by {{move.supplier.name}}"
  },
  "MoveDateChanged": {
    "heading": "Move date changed",
    "description": "The move date has been updated to {{date, formatDateWithDay}}"
  },
  "MoveLockout": {
    "contextKey": "reason",
    "heading": "Lockout",
    "description": "$t(events::person) locked out from {{from_location.title}} $t(events::MoveLockout.select_reason)",
    "select_reason": "$t(events::MoveLockout.reason, {\"context\": \"{{reason}}\"})",
    "reason": "",
    "reason_no_space": "due to there being no space",
    "reason_unachievable_redirection": "due to an unachievable redirection",
    "reason_late_sitting_court": "due to the late sitting of the court",
    "reason_unavailable_resource_vehicle_or_staff": "due to a vehicle or member of staff being unavailable",
    "reason_traffic_issues": "due to traffic issues",
    "reason_mechanical_or_other_vehicle_failure": "due to a mechanical or other vehicle failure",
    "reason_ineffective_route_planning": "due to ineffective route planning",
    "reason_unachievable_ptr_request": "due to an unachievable PTR request",
    "reason_other": ""
  },
  "MoveLodgingStart": {
    "heading": "$t(events::MoveLodgingStart.heading_text, {\"context\": \"{{reason}}\"})",
    "heading_text": "Temporary lodge started",
    "heading_text_overnight_lodging": "Overnight lodge: arrived at lodge prison",
    "heading_text_lockout": "Lockout: arrived at police custody suite",
    "description": "$t(events::MoveLodgingStart.description_text, {\"context\": \"{{reason}}\"})",
    "description_text": "$t(events::person) temporarily lodged at {{location.title}} $t(events::MoveLodgingStart.select_reason) $t(events::select_authorised_by)",
    "description_text_overnight_lodging": "$t(events::person) arrived at {{location.title}} $t(events::MoveLodgingStart.select_reason) $t(events::select_authorised_by)",
    "description_text_lockout": "$t(events::person) arrived at {{location.title}} $t(events::MoveLodgingStart.select_reason) $t(events::select_authorised_by)",
    "select_reason": "$t(events::MoveLodgingStart.reason, {\"context\": \"{{reason}}\"})",
    "reason": "",
    "reason_overnight_lodging": "due to an overnight lodge",
    "reason_lockout": "due to a lockout",
    "reason_operation_hmcts": "due to Operation HMCTS",
    "reason_court_cells": "due to court cells reaching capacity",
    "reason_operation_tornado": "due to Operation Tornado",
    "reason_operation_safeguard": "due to Operation Safeguard",
    "reason_other": ""
  },
  "MoveLodgingEnd": {
    "heading": "$t(events::MoveLodgingEnd.heading_text, {\"context\": \"{{reason}}\"})",
    "heading_text": "Temporary lodge ended",
    "heading_text_overnight_lodging": "Overnight lodge: collected from lodge prison",
    "heading_text_lockout": "Lockout: collected from police custody suite",
    "description": "$t(events::MoveLodgingEnd.description_text, {\"context\": \"{{reason}}\"})",
    "description_text": "$t(events::person) collected from temporary lodging at {{location.title}} $t(events::select_authorised_by)",
    "description_text_overnight_lodging": "$t(events::person) collected from overnight lodge at {{location.title}} $t(events::select_authorised_by)",
    "description_text_lockout": "$t(events::person) collected from {{location.title}} $t(events::select_authorised_by)"
  },
  "MoveNotifyPremisesOfArrivalIn30Mins": {
    "heading": "30 minute arrival notification",
    "description": "{{move.supplier.name}} will arrive at {{move.to_location.title}} in 30 minutes"
  },
  "MoveNotifyPremisesOfEta": {
    "heading": "Destination notified of expected time of arrival",
    "description": "{{move.to_location.title}} was notified of an expected arrival time of {{expected_at, formatTime}}"
  },
  "MoveNotifyPremisesOfDropOffEta": {
    "heading": "Destination notified of expected time of arrival",
    "description": "{{move.to_location.title}} was notified of an expected arrival time of {{expected_at, formatTime}}"
  },
  "MoveNotifyPremisesOfPickupEta": {
    "heading": "Pickup location notified of expected time of arrival",
    "description": "{{move.from_location.title}} was notified of an expected arrival time of {{expected_at, formatTime}}"
  },
  "MoveNotifyPremisesOfExpectedCollectionTime": {
    "heading": "{{move.from_location.title}} notified of expected collection time",
    "description": "Expected collection at {{expected_at, formatTime}}"
  },
  "MoveNotifySupplierOfMoveRequest": {
    "heading": "{{move.supplier.name}} notified of move request",
    "description": ""
  },
  "MoveOperationHMCTS": {
    "heading": "Operation HMCTS enacted",
    "description": "$t(events::select_authorised_by)"
  },
  "MoveOperationSafeguard": {
    "heading": "Operation Safeguard enacted",
    "description": "$t(events::select_authorised_by)"
  },
  "MoveOperationTornado": {
    "heading": "Operation Tornado enacted",
    "description": "$t(events::select_authorised_by)"
  },
  "MoveProposed": {
    "statusChange": true,
    "heading": "$t(statuses::proposed)",
    "description": "Move has been proposed by OCA"
  },
  "MoveRedirect": {
    "heading": "Redirected to {{to_location.title}}",
    "description": "Move redirected $t(events::MoveRedirect.select_reason)",
    "select_reason": "$t(events::MoveRedirect.reason, {\"context\": \"{{reason}}\"})",
    "reason": "",
    "reason_no_space": "as there was no space",
    "reason_serious_incident": "due to a serious incident",
    "reason_covid": "due to COVID",
    "reason_receiving_prison_request": "as the receiving prison made a request",
    "reason_force_majeure": "due to force majeure",
    "reason_other": ""
  },
  "MoveReject": {
    "statusChange": true,
    "heading": "Move cancelled",
    "description": "Move has been rejected by $t(events::select_agency)",
    "select_rebook": "$t(events::MoveReject.rebook, {\"context\": \"{{rebook}}\"})",
    "rebook": "",
    "rebook_true": "This move will be rebooked in 7 days",
    "rebook_false": "This move may be rebooked in 7 days if still required",
    "select_cancellation_reason_comment": "$t(events::MoveReject.cancellation_reason_comment, {\"context\": \"{{cancellation_reason_comment, exists}}\"})",
    "cancellation_reason_comment": "",
    "cancellation_reason_comment_true": "Additional information — {{cancellation_reason_comment}}"
  },
  "MoveRequested": {
    "statusChange": true,
    "default_agency": "user",
    "heading": "$t(statuses::requested)",
    "description": "Move has been requested with {{move.supplier.name}} by $t(events::select_agency)"
  },
  "MoveStart": {
    "statusChange": true,
    "heading": "$t(statuses::in_transit)",
    "description": "Move started by {{move.supplier.name}}"
  },
  "MoveCrossSupplierPickUp": {
    "heading": "Crossdeck move",
    "description": "Move {{previous_move.reference}} picked up by {{move.supplier.name}}"
  },
  "MoveCrossSupplierDropOff": {
    "heading": "Crossdeck move",
    "description": "Drop off by {{supplier.name}}"
  },
  "PerViolentDangerous": {
    "heading": "Violent Or Dangerous",
    "description": "{{notes}}"
  },
  "PerWeapons": {
    "heading": "Created or used weapons",
    "description": "{{notes}}"
  },
  "PerConcealed": {
    "heading": "Concealed items",
    "description": "{{notes}}"
  },
  "PerEscape": {
    "heading": "Escape",
    "description": "{{notes}}"
  },
  "PerSelfHarm": {
    "heading": "Self-harm",
    "description": "{{notes}}"
  },
  "PerSuicideAndSelfHarm": {
    "heading": "",
    "description": "{{history_of_self_harm_details}}"
  },
  "PerMedicalDrugsAlcohol": {
    "flag": "medical",
    "heading": "Drugs or Alcohol",
    "description": "{{notes}}"
  },
  "PerMedicalMentalHealth": {
    "flag": "medical",
    "heading": "Mental Health",
    "description": "{{notes}}"
  },
  "PerMedicalMedication": {
    "flag": "medical",
    "heading": "Medication",
    "description": "{{notes}}"
  },
  "PerCourtAllDocumentationProvidedToSupplier": {
    "heading": "Documentation provided to supplier",
    "description": "$t(events::PerCourtAllDocumentationProvidedToSupplier.select_subtype) made available to supplier personnel at {{court_location.title}}",
    "select_subtype": "$t(events::PerCourtAllDocumentationProvidedToSupplier.subtype, {\"context\": \"{{subtype}}\"})",
    "subtype": "",
    "subtype_extradition_order": "Extradition order",
    "subtype_placement_confirmation": "Placement confirmation",
    "subtype_warrant": "Warrant"
  },
  "PerCourtAssignCellInCustody": {
    "heading": "Person assigned to cell",
    "description": "Assigned to {{court_cell_number}} at {{location.title}}"
  },
  "PerCourtCellShareRiskAssessment": {
    "heading": "Cell share risk assessment completed",
    "description": ""
  },
  "PerCourtExcessiveDelayNotDueToSupplier": {
    "heading": "Court delayed",
    "description": "Excessive delay due to $t(events::PerCourtExcessiveDelayNotDueToSupplier.select_subtype) at {{location.title}} between {{occurred_at, formatTime}} and {{ended_at, formatTime}}",
    "select_subtype": "$t(events::PerCourtExcessiveDelayNotDueToSupplier.subtype, {\"context\": \"{{subtype}}\"})",
    "subtype": "",
    "subtype_making_prisoner_available_for_loading": "excessive delay accessing location when collecting or dropping off prisoner",
    "subtype_access_to_or_from_location_when_collecting_dropping_off_prisoner": "excessive delay in making prisoner available for loading"
  },
  "PerCourtHearing": {
    "heading": "Court hearing",
    "description": "The $t(events::PerCourtHearing.hearing) was listed for {{court_listing_at, formatTime}} at {{location.title}}. The agreed arrival time was {{agreed_at, formatTime}}.<br>The $t(events::PerCourtHearing.hearing) started at {{started_at, formatTime}} and finished at {{ended_at, formatTime}}.<br>The following outcome was reached: {{court_outcome}}",
    "hearing": "$t(events::PerCourtHearing.select_is_virtual) $t(events::PerCourtHearing.select_is_trial)",
    "select_is_trial": "$t(events::PerCourtHearing.is_trial, {\"context\": \"{{is_trial}}\"})",
    "is_trial": "hearing",
    "is_trial_true": "trial",
    "select_is_virtual": "$t(events::PerCourtHearing.is_virtual, {\"context\": \"{{is_virtual}}\"})",
    "is_virtual": "",
    "is_virtual_true": "virtual"
  },
  "PerCourtPreReleaseChecksCompleted": {
    "heading": "Pre-release checks completed",
    "description": ""
  },
  "PerCourtReadyInCustody": {
    "heading": "$t(events::person) ready in custody",
    "description": ""
  },
  "PerCourtRelease": {
    "heading": "$t(events::person) released",
    "description": ""
  },
  "PerCourtReleaseOnBail": {
    "heading": "$t(events::person) released on bail",
    "description": ""
  },
  "PerCourtReturnToCustodyAreaFromDock": {
    "heading": "$t(events::person) returned to custody area from dock",
    "description": ""
  },
  "PerCourtReturnToCustodyAreaFromVisitorArea": {
    "heading": "$t(events::person) returned to custody area from visitor area",
    "description": ""
  },
  "PerCourtTakeFromCustodyToDock": {
    "heading": "$t(events::person) taken to court dock from custody area",
    "description": ""
  },
  "PerCourtTakeToSeeVisitors": {
    "heading": "$t(events::person) taken to visitor area",
    "description": ""
  },
  "PerCourtTask": {
    "heading": "Court task",
    "description": "{{notes}}, completed by {{supplier_personnel_number}}"
  },
  "PerGeneric": {
    "heading": "{{supplier.name}} has logged a generic event note",
    "heading_without_supplier": "Generic lockout event added",
    "description": "{{notes}}"
  },
  "PerMedicalAid": {
    "flag": "medical",
    "heading": "Medical attention",
    "description": "$t(events::person) requested medical attention with {{supplier_personnel_number}}<br>Medical advice was provided by {{advised_by}} at {{advised_at, formatTime}}<br>Treatment was administered by {{treated_by}} at {{treated_at, formatTime}} $t(events::PerMedicalAid.select_location)",
    "description_without_supplier": "{{notes}}",
    "select_location": "$t(events::PerMedicalAid.location_vehicle, {\"context\": \"{{vehicle_reg, exists}}\"})",
    "location_vehicle": "at {{location.title}}",
    "location_vehicle_true": "inside the vehicle {{vehicle_reg}}"
  },
  "PerPrisonerWelfare": {
    "heading": "Welfare offered",
    "description": "$t(events::person) was offered $t(events::PerPrisonerWelfare.select_subtype) at {{occurred_at, formatTime}}<br>Welfare was {{outcome}}<br>{{supplier_personnel_number}} provided welfare at {{given_at, formatTime}}",
    "select_subtype": "$t(events::PerPrisonerWelfare.subtype, {\"context\": \"{{subtype}}\"})",
    "subtype": "",
    "subtype_miscellaneous_welfare": "miscellaneous welfare",
    "subtype_comfort_break": "comfort_break",
    "subtype_food": "food",
    "subtype_beverage": "a beverage",
    "subtype_additional_clothing": "additional clothing",
    "subtype_relevant_information_given": "relevant information"
  },
  "PerPropertyChange": {
    "heading": "Property change",
    "description": "{{notes}}"
  },
  "PersonMoveAssault": {
    "flag": "red",
    "heading": "Assault occurred",
    "description": "{{notes}}"
  },
  "PersonMoveBookedIntoReceivingEstablishment": {
    "heading": "$t(events::person) booked into {{location.title}}",
    "description": ""
  },
  "PersonMoveDeathInCustody": {
    "flag": "grey",
    "heading": "Death in custody",
    "description": "{{notes}}"
  },
  "PersonMoveMajorIncidentOther": {
    "flag": "red",
    "heading": "Major incident occurred",
    "description": "$t(events::incident_level_details, {\"incident_level\": \"Major\"})"
  },
  "PersonMoveMinorIncidentOther": {
    "flag": "red",
    "heading": "Minor incident occurred",
    "description": "$t(events::incident_level_details, {\"incident_level\": \"Minor\"})"
  },
  "PersonMovePersonEscapedKpi": {
    "flag": "red",
    "heading": "KPI Escape occured",
    "description": "$t(events::incident_escaped)"
  },
  "PersonMovePersonEscaped": {
    "flag": "red",
    "heading": "Non KPI Escape occured",
    "description": "$t(events::incident_escaped)"
  },
  "PersonMoveReleasedError": {
    "flag": "red",
    "heading": "Released in error",
    "description": "$t(events::person) was released in error from {{location.title}} $t(events::incident_reported_classified)"
  },
  "PersonMoveRoadTrafficAccident": {
    "flag": "red",
    "heading": "Road traffic accident",
    "description": "Vehicle {{vehicle_reg}} transporting $t(events::person) met with road traffic accident $t(events::incident_reported_classified)"
  },
  "PersonMoveSeriousInjury": {
    "flag": "red",
    "heading": "Serious injury sustained",
    "description": "$t(events::person) sustained serious injury $t(events::select_incident_location_preposition) $t(events::select_incident_location_vehicle) $t(events::incident_reported_classified)"
  },
  "PersonMoveUsedForce": {
    "flag": "red",
    "heading": "Used force",
    "description": "{{notes}}"
  },
  "PersonMoveVehicleBrokeDown": {
    "heading": "Supplier vehicle breakdown",
    "description": "Vehicle {{vehicle_reg}} transporting $t(events::person) broke down $t(events::incident_reported_classified)"
  },
  "PersonMoveVehicleSystemsFailed": {
    "heading": "Supplier vehicle systems failed",
    "description": "Vehicle {{vehicle_reg}} transporting $t(events::person) has had a system failure $t(events::incident_reported_classified)"
  },
  "PerConfirmation": {
    "heading": "Person Escort Record confirmed",
    "description": "All information in this Person Escort Record was confirmed"
  },
  "PerCompletion": {
    "heading": "Person Escort Record completed",
    "description": "Risk information completed {{riskUsers}}<br>Offence information completed {{offenceUsers}}<br>Health information completed {{healthUsers}}<br>Property information completed {{propertyUsers}}"
  },
  "PerUpdated": {
    "heading": "Person Escort Record updated",
    "description": "{{updateSection}} {{updateAuthor}}"
  },
  "PerHandover": {
    "heading": "Handover recorded",
    "description": "$t(events::person) was handed over $t(events::PerHandover.location, {\"context\": \"{{location, exists}}\"}) $t(events::PerHandover.dispatching, {\"context\": \"{{dispatching_officer, exists}}\"}) $t(events::PerHandover.receiving, {\"context\": \"{{receiving_officer, exists}}\"})",
    "location_true": "at {{location.title}}",
    "location_false": "",
    "receiving_true": "to {{receiving_officer}} ({{receiving_officer_id}}) of {{receiving_organisation}}",
    "receiving_false": "",
    "dispatching_true": "by {{dispatching_officer}} ({{dispatching_officer_id}})",
    "dispatching_false": ""
  }
}
