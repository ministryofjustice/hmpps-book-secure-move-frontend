version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.6
  hmpps: ministryofjustice/hmpps@7

aliases:
  # Shared containers
  - &node_container
    executor:
      name: hmpps/node
      tag: lts-browsers
  # Common steps
  - &install_dependencies
    run:
      name: Install NPM dependencies
      command: npm install && npm rebuild node-sass
  - &restore_cache
    restore_cache:
      name: Restore NPM cache
      key: dependency-cache-{{ checksum "package.json" }}
  - &save_cache
    save_cache:
      name: Save NPM cache
      key: dependency-cache-{{ checksum "package.json" }}
      paths:
        - ./node_modules
  - &set_package_version
    run:
      name: Set version
      command: |
        echo "export PACKAGE_VERSION=$(grep -m1 version package.json | awk -F: '{ print $2 }' | sed 's/[", ]//g')" >> $BASH_ENV
  # Common filters
  - &only_main
    filters:
      branches:
        only:
          - main
  - &not_main
    filters:
      branches:
        ignore:
          - main
jobs:
  build:
    <<: *node_container
    steps:
      - checkout
      - *set_package_version
      - *restore_cache
      - *install_dependencies
      - *save_cache
      - run:
          name: Compile typescript, build assets and frameworks
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - .build
  lint:
    <<: *node_container
    steps:
      - checkout
      - attach_workspace:
          at: .
      - *restore_cache
      - *install_dependencies
      - run:
          name: Write eslintignore
          command: npx tsc --listFilesOnly | grep -v 'node_modules' | sed 's/\.ts/\.js/' | sed "s#$(pwd)/##" > ./.eslintignore
      - run:
          name: Lint the code
          command: npm run circle:lint
      - store_artifacts:
          path: ./reports/eslint/eslint.xml
          destination: lint-report

  unit-test:
    <<: *node_container
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Compile typescript, build assets and frameworks
          command: npm run build
      - run:
          name: Run unit tests
          command: |
            npm run circle:coverage
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - run:
          name: Compress Coverage
          command: tar -cvzf coverage.tar coverage
      - store_artifacts:
          path: coverage.tar

  security-audit:
    <<: *node_container
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Compile typescript, build assets and frameworks
          command: npm run security_audit

  end-to-end-test:
    <<: *node_container
    resource_class: large
    parallelism: 8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - browser-tools/install-browser-tools :
          chrome-version: 114.0.5735.198
      - run:
          name: Compile typescript, build assets and frameworks
          command: npm run build
      - run:
          name: Run E2E tests (same instance)
          environment:
            REDIS_URL: ""
            NODE_OPTIONS: --max-old-space-size=12288
          command: |
            npm run test-e2e -- --test $(circleci tests glob "test/e2e/**/*.test.js" | circleci tests split --split-by=timings)
      - run:
          name: Convert testcafe reports to relative path
          command: sed -i 's/\/home\/circleci\/project\///g' reports/testcafe/*.xml
      - store_test_results:
          path: reports/testcafe
      - store_artifacts:
          path: artifacts

workflows:
  continuous-deployment:
    jobs:
      # Tests
      - build
      - lint:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
          requires:
            - build
      - unit-test:
          requires:
            - build
      - end-to-end-test:
          name: end-to-end-test
          requires:
            - build
      - hmpps/build_docker:
          <<: *not_main
          name: test-build-docker
          publish: false
          requires:
            - build
      - hmpps/build_docker:
          <<: *only_main
          name: build-docker-image
          requires:
            - build
      # Deployment
      - hmpps/deploy_env:
          name: deploy-staging
          env: 'staging'
          <<: *only_main
          context:
            - hmpps-common-vars
            - basm-fe-staging
          requires:
            - build-docker-image
            - end-to-end-test
            - lint
            - helm_lint
      - hmpps/deploy_env:
          <<: *only_main
          name: deploy-preprod
          env: 'preprod'
          context:
            - hmpps-common-vars
            - basm-fe-preprod
          requires:
            - preprod-approval
      - hmpps/deploy_env:
          <<: *only_main
          name: deploy-uat
          env: 'uat'
          context:
            - hmpps-common-vars
            - basm-fe-uat
          requires:
            - uat-approval
      - hmpps/deploy_env:
          <<: *only_main
          name: deploy-production
          env: 'production'
          context:
            - hmpps-common-vars
            - basm-fe-prod
          slack_notification: true
          slack_channel_name: move-a-prisoner-digital
          requires:
            - prod-approval

      # Approval gates
      - uat-approval:
          type: approval
          requires:
            - deploy-staging
      - preprod-approval:
          type: approval
          requires:
            - deploy-staging
      - prod-approval:
          type: approval
          requires:
            - deploy-preprod
            - deploy-uat

      # Post release
      - hmpps/sentry_release_and_deploy:
          <<: *only_main
          name: publish-release-to-sentry-staging
          sentry_project: book-a-secure-move-frontend
          sentry_environment: staging
          sentry_create_release: true
          requires:
            - deploy-staging
      - hmpps/sentry_release_and_deploy:
          <<: *only_main
          name: publish-release-to-sentry-uat
          sentry_project: book-a-secure-move-frontend
          sentry_environment: uat
          requires:
            - deploy-uat
      - hmpps/sentry_release_and_deploy:
          <<: *only_main
          name: publish-release-to-sentry-preprod
          sentry_project: book-a-secure-move-frontend
          sentry_environment: preproduction
          requires:
            - deploy-preprod
      - hmpps/sentry_release_and_deploy:
          <<: *only_main
          name: publish-release-to-sentry-production
          sentry_project: book-a-secure-move-frontend
          sentry_environment: production
          requires:
            - deploy-production
  daily-e2e:
    triggers:
      - schedule:
          cron: "17 10 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - build
      - end-to-end-test:
          requires:
            - build

  security:
    triggers:
      - schedule:
          cron: "4 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - security-audit
